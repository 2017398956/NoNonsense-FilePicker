// ./gradlew clean build generateRelease
apply plugin: 'maven'

def groupId = project.GROUP
def artifactId = project.POM_ARTIFACT_ID
def version = project.VERSION_NAME

def localReleaseDest = "${buildDir}/release/${version}"

task androidJavadocs(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    ext.androidJar = "${android.sdkDirectory}/platforms/${android.compileSdkVersion}/android.jar"
    classpath += files(ext.androidJar)
}

task androidJavadocsJar(type: Jar, dependsOn: androidJavadocs) {
    classifier = 'javadoc'
    from androidJavadocs.destinationDir
}

task androidSourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.srcDirs
}

uploadArchives {
  repositories.mavenDeployer {
    pom.groupId = GROUP
    pom.artifactId = POM_ARTIFACT_ID
    pom.version = VERSION_NAME

    // Add other pom properties here if you want (developer details / licenses)
    repository(url: "file://${localReleaseDest}")

    pom.project {
      name POM_NAME
      packaging POM_PACKAGING
      description POM_DESCRIPTION
      url POM_URL

      scm {
        url POM_SCM_URL
        connection POM_SCM_CONNECTION
        developerConnection POM_SCM_DEV_CONNECTION
      }

      licenses {
        license {
          name POM_LICENCE_NAME
          url POM_LICENCE_URL
          distribution POM_LICENCE_DIST
        }
      }

      developers {
        developer {
          id POM_DEVELOPER_ID
          name POM_DEVELOPER_NAME
          email POM_DEVELOPER_EMAIL
        }
      }
    }
  }
}

task zipRelease(type: Zip) {
    from localReleaseDest
    destinationDir buildDir
    archiveName "release-${version}.zip"
}

task generateRelease << {
    println "Release ${version} can be found at ${localReleaseDest}/"
    println "Release ${version} zipped can be found ${buildDir}/release-${version}.zip"
}

generateRelease.dependsOn(uploadArchives)
generateRelease.dependsOn(zipRelease)


artifacts {
    archives androidSourcesJar
    archives androidJavadocsJar
}